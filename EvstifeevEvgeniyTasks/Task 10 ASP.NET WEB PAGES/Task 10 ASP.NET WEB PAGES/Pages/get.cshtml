@using Task6.InversionOfControl;
@using Task6.Entities;
@using CustomUsers;
@{
    Layout = "~/Layouts/_MainLayout.cshtml";
    Page.Title = "Get data";

    //List<string> result = new List<string>();
    string result = string.Empty;
    var users = new List<User>();
    var awards = new List<Award>();
    var descriptionUsers = string.Empty;
    var descriptionAwards = string.Empty;
    var descriptionCustomUsers = string.Empty;
    string SelectedAll = string.Empty;
    string SelectedUsers = string.Empty;
    string SelectedAwards = string.Empty;
    string SelectedCustomUsers = string.Empty;

    string selected = "All";
    if (IsPost)
    {
        selected = Request["requested entities"];

        var userLogic = DependencyResolver.UserLogic;
        var awardLogic = DependencyResolver.AwardLogic;

        if (selected == "all")
        {
            SelectedAll = "selected";
            descriptionUsers = "Users:";
            foreach (var item in userLogic.GetAll())
            {
                users.Add(item);
            }
            descriptionAwards = "Awards:";
            foreach (var item in awardLogic.GetAll())
            {
                awards.Add(item);
            }
            descriptionCustomUsers = "Website users:";
        }
        else if (selected == "users")
        {
            descriptionUsers = "Users:";
            SelectedUsers = "selected";
            foreach (var item in userLogic.GetAll())
            {
                users.Add(item);
            }
        }
        else if (selected == "awards")
        {
            SelectedAwards = "selected";
            descriptionAwards = "Awards:";
            foreach (var item in awardLogic.GetAll())
            {
                awards.Add(item);
            }
        }
        else if (selected == "customUsers")
        {
            SelectedCustomUsers = "selected";
            descriptionCustomUsers = "Awards:";
        }
    }
}

<form action="~/Pages/get.cshtml" method="post">
    <div class="getOptions" id="getOptions">
        <select name="requested entities">
            @if (User.IsInRole("admin"))
            {
                <option value="all" @SelectedAll>All</option>
            }
            <option value="users" @SelectedUsers>Users</option>
            @if (User.IsInRole("admin"))
            {
                <option value="awards" @SelectedAwards>Awards</option>
                <option value="customUsers" @SelectedCustomUsers>Website users</option>
            }

        </select>
    </div>
    <button id="btn-ok">Ok</button>
</form>
<div id="result">
    @descriptionUsers
    @foreach (var item in users)
    {
        <div imageWrapper>
            <img src="@(item.ImageLink != "" ? item.ImageLink : "/Images/default.jpg")" width="50px" />
        </div>
        <p>
            @if (User.IsInRole("admin"))
            {
                @: Id: @item.Id; 
            }
            Name: @item.Name; date of birth: @item.DateOfBirth.ToShortDateString();
            @if (User.Identity.IsAuthenticated)
            {
                @: Awards:
                int awardIndex = 0;
                foreach (var award in item.Awards)
                {
                    awardIndex++;
                    if (awardIndex < item.Awards.Count())
                    {
                        @:@award.Title,
                    }
                    else
                    {
                        @:@award.Title.
                    }
                }

            }

        </p>
        <br />
    }
    @if (User.IsInRole("admin"))
    {
        @descriptionAwards
        foreach (var item in awards)
        {
            <div imageWrapper>
                <img src="@(item.ImageLink != "" ? item.ImageLink : "/Images/default.jpg")" width="50px" />
                &nbsp;
            </div>

            <p>@item.ToString()</p>
        }
        <br />
        if (SelectedAll == "selected" || SelectedCustomUsers == "selected")
        {
            @: Users:
            foreach (var customUser in CustomUsers.Users.Values)
            {
                <p>
                    Name:  @customUser.Name; Password: @customUser.Password; Roles:
                    @foreach (var role in customUser.Roles)
                    {
                        @: @role;
                    }
                </p>
            }
            <br />
        }
    }
</div>
