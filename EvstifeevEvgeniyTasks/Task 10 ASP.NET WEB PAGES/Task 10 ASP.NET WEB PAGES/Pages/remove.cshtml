@using Task6.InversionOfControl;
@using Task6.Entities;
@using Task6.Interfaces
@{
    if (!User.IsInRole("admin"))
    {
        Response.Redirect("~");
    }
    Layout = "~/Layouts/_MainLayout.cshtml";
    Page.Title = "Remove data";

    var selectedUser = string.Empty;
    var selectedAward = string.Empty;
    var selectedAwards = string.Empty;
    var selectedUsers = string.Empty;

    string result = "failed";
    if (Request.QueryString["isSuccessful"] != null)
    {
        result = "success";
    }
    int id = 0;
    string ids = "0";

    var selected = Request["type of entity"];
    if (selected == "user")
    {
        selectedUser = "selected";
    }
    else if (selected == "award")
    {
        selectedAward = "selected";
    }
    else if (selected == "awards")
    {
        selectedAwards = "selected";
    }
    else if (selected == "users")
    {
        selectedUsers = "selected";
    }
    if (IsPost)
    {
        if (int.TryParse(Request["id"], out id))
        {
            if (selected == "user")
            {

                var userLogic = DependencyResolver.UserLogic;
                if (userLogic.GetById(id) != null)
                {
                    userLogic.Remove(id);

                    result = "Success";
                }
            }
            else if (selected == "award")
            {

                var userLogic = DependencyResolver.UserLogic;
                var awardLogic = DependencyResolver.AwardLogic;
                if (awardLogic.GetById(id) != null)
                {
                    if (!userLogic.GetAll().Any(user => user.Awards.Contains(awardLogic.GetById(id))))
                    {
                        awardLogic.Remove(id);
                        result = "Success";
                    }
                    else
                    {
                        Response.Redirect("~/Pages/removeAwardFromAllUsers.cshtml?id=" + id);
                    }
                }
            }
            else if (selected == "awards")
            {
                ids = Request["Ids"];
                var requestedIds = Request["Ids"].Split(',');
                int[] removableIds = new int[requestedIds.Length];

                for (int i = 0; i < removableIds.Length; i++)
                {
                    if (int.TryParse(requestedIds[i], out removableIds[i]))
                    {

                    }
                }

                if (removableIds.Length > 0)
                {
                    var userLogic = DependencyResolver.UserLogic;

                    userLogic.RemoveAwards(id, removableIds);

                    result = "Success";
                }

            }
            else if (selected == "users")
            {

                ids = Request["Ids"];
                var requestedIds = Request["Ids"].Split(',');
                int[] removableIds = new int[requestedIds.Length];

                for (int i = 0; i < removableIds.Length; i++)
                {
                    if (int.TryParse(requestedIds[i], out removableIds[i]))
                    {

                    }
                }

                if (removableIds.Length > 0)
                {
                    var awardLogic = DependencyResolver.AwardLogic;

                    awardLogic.RemoveUsers(id, removableIds);

                    result = "Success";
                }

            }
        }

    }
    string displayIds = selectedUsers != string.Empty || selectedAwards != string.Empty ? "block" : "none";
}

<form action="~/Pages/remove.cshtml" method="post">
    <div class="getOptions" id="getOptions">
        <label>Choose the entity.</label>
        <select name="type of entity" id="selectEntity">
            <option value="user" @selectedUser>User</option>
            <option value="award" @selectedAward>Award</option>
            <option value="users" @selectedUsers>Users from award</option>
            <option value="awards" @selectedAwards>Awards from user</option>
        </select>
    </div>
    <div class="input id wrapper">
        <label>Removes item with specified id</label>
        <input type="text" id="id" name="id" value=@id />
        <label for="id">Id</label>
        <input style="display:@displayIds" type="text" id="ids" name="ids" value=@ids />
        <label style="display:@displayIds" for="ids" id="labelIds">Ids</label>
    </div>
    <input type="submit" id="submit" value="Submit" />
</form>
<div id="result">@result</div>
<script src="~/Scripts/jquery-3.0.0.js"></script>
<script src="~/Scripts/bootstrap.js"></script>

<script>
    $("#selectEntity").change(function () {
        var typeOfEntity = document.getElementById('selectEntity').value;

        var ids = document.getElementById('ids');
        var labelIds = document.getElementById('labelIds');
        if (typeOfEntity == 'user' || typeOfEntity == 'award') {
            ids.style.display = "none";
            labelIds.style.display = "none";
        }
        else {
            ids.style.display = "block";
            labelIds.style.display = "block";
        }
    });
</script>
